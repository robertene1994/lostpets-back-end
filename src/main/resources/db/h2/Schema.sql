
-- TUSER
CREATE TABLE PUBLIC.TUSER(
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    FIRST_NAME VARCHAR(255) NOT NULL,
    LAST_NAME VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(255) NOT NULL,
    PHONE VARCHAR(255) NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    ROLE VARCHAR(255) NOT NULL,
    STATUS VARCHAR(255) NOT NULL,
    CONSTRAINT PK_TUSER PRIMARY KEY(ID),
    CONSTRAINT UK_TUSER UNIQUE(EMAIL)
);

-- TAD
CREATE TABLE PUBLIC.TAD(
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    CODE VARCHAR(255) NOT NULL,
    DATE TIMESTAMP NOT NULL,
    AD_STATUS VARCHAR(255) NOT NULL,
    PET_STATUS VARCHAR(255) NOT NULL,
    REWARD DOUBLE NOT NULL,
    LATITUDE DOUBLE NOT NULL,
    LONGITUDE DOUBLE NOT NULL,
    NAME VARCHAR(255) NOT NULL, 
    TYPE VARCHAR(255) NOT NULL,
    RACE VARCHAR(255) NOT NULL,
    SEX VARCHAR(255) NOT NULL,
    COLOUR VARCHAR(255) NOT NULL,
    MICROCHIP_ID VARCHAR(255) NOT NULL,
    OBSERVATIONS VARCHAR(5000) NOT NULL,
    PHOTO VARCHAR(255) NOT NULL,
    USER_ID BIGINT NOT NULL,
    CONSTRAINT PK_TAD PRIMARY KEY(ID),
    CONSTRAINT UK_TBOOKING UNIQUE(CODE),
    CONSTRAINT FK_TAD_USER_ID FOREIGN KEY(USER_ID) REFERENCES TUSER(ID)
);

-- TCHAT
CREATE TABLE PUBLIC.TCHAT(
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    CODE VARCHAR(255) NOT NULL,
    CONSTRAINT PK_TCHAT PRIMARY KEY(ID),
    CONSTRAINT UK_TCHAT_CODE UNIQUE(CODE)
);

-- TMESSAGE
CREATE TABLE PUBLIC.TMESSAGE(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
	CODE VARCHAR(255) NOT NULL,
    CONTENT VARCHAR(255) NOT NULL,
    DATE TIMESTAMP NOT NULL,
    MESSAGE_STATUS VARCHAR(255) NOT NULL,
    FROM_USER_ID BIGINT NOT NULL,
    TO_USER_ID BIGINT NOT NULL,
    CHAT_ID BIGINT NOT NULL,
    CONSTRAINT PK_TMESSAGE PRIMARY KEY(ID),
    CONSTRAINT UK_TMESSAGE_CODE UNIQUE(CODE),
    CONSTRAINT FK_MESSAGE_CHAT_ID FOREIGN KEY(CHAT_ID) REFERENCES TCHAT(ID),
    CONSTRAINT FK_MESSAGE_FROM_USER_ID FOREIGN KEY(FROM_USER_ID) REFERENCES TUSER(ID),
    CONSTRAINT FK_MESSAGE_TO_USER_ID FOREIGN KEY(TO_USER_ID) REFERENCES TUSER(ID)
);
